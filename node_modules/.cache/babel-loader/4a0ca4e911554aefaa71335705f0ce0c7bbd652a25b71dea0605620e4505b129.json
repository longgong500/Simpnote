{"ast":null,"code":"import { Accidental } from './accidental.js';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation.js';\nimport { Articulation } from './articulation.js';\nimport { BarNote } from './barnote.js';\nimport { Beam } from './beam.js';\nimport { ChordSymbol } from './chordsymbol.js';\nimport { ClefNote } from './clefnote.js';\nimport { Curve } from './curve.js';\nimport { EasyScore } from './easyscore.js';\nimport { Element } from './element.js';\nimport { Formatter } from './formatter.js';\nimport { FretHandFinger } from './frethandfinger.js';\nimport { GhostNote } from './ghostnote.js';\nimport { GlyphNote } from './glyphnote.js';\nimport { GraceNote } from './gracenote.js';\nimport { GraceNoteGroup } from './gracenotegroup.js';\nimport { KeySigNote } from './keysignote.js';\nimport { ModifierContext } from './modifiercontext.js';\nimport { MultiMeasureRest } from './multimeasurerest.js';\nimport { NoteSubGroup } from './notesubgroup.js';\nimport { Ornament } from './ornament.js';\nimport { PedalMarking } from './pedalmarking.js';\nimport { Renderer } from './renderer.js';\nimport { RepeatNote } from './repeatnote.js';\nimport { Stave } from './stave.js';\nimport { StaveConnector } from './staveconnector.js';\nimport { StaveLine } from './staveline.js';\nimport { StaveNote } from './stavenote.js';\nimport { StaveTie } from './stavetie.js';\nimport { StringNumber } from './stringnumber.js';\nimport { System } from './system.js';\nimport { TabNote } from './tabnote.js';\nimport { TabStave } from './tabstave.js';\nimport { TextBracket } from './textbracket.js';\nimport { TextDynamics } from './textdynamics.js';\nimport { TextNote } from './textnote.js';\nimport { TickContext } from './tickcontext.js';\nimport { TimeSigNote } from './timesignote.js';\nimport { Tuplet } from './tuplet.js';\nimport { defined, log, RuntimeError } from './util.js';\nimport { VibratoBracket } from './vibratobracket.js';\nimport { Voice } from './voice.js';\nimport { isHTMLCanvas } from './web.js';\nfunction L(...args) {\n  if (Factory.DEBUG) log('Vex.Flow.Factory', args);\n}\nclass Factory {\n  static newFromElementId(elementId, width = 500, height = 200) {\n    return new Factory({\n      renderer: {\n        elementId,\n        width,\n        height\n      }\n    });\n  }\n  constructor(options = {}) {\n    L('New factory: ', options);\n    this.options = {\n      stave: {\n        space: 10\n      },\n      renderer: {\n        elementId: '',\n        width: 500,\n        height: 200,\n        background: '#FFF'\n      },\n      font: Factory.TEXT_FONT\n    };\n    this.setOptions(options);\n  }\n  reset() {\n    this.renderQ = [];\n    this.systems = [];\n    this.staves = [];\n    this.voices = [];\n    this.stave = undefined;\n  }\n  setOptions(options) {\n    this.options = Object.assign(Object.assign({}, this.options), options);\n    this.initRenderer();\n    this.reset();\n  }\n  initRenderer() {\n    const {\n      elementId,\n      width,\n      height,\n      background\n    } = this.options.renderer;\n    if (elementId == null) {\n      return;\n    }\n    if (elementId == '') {\n      L(this);\n      throw new RuntimeError('renderer.elementId not set in FactoryOptions');\n    }\n    let backend = this.options.renderer.backend;\n    if (backend === undefined) {\n      const elem = document.getElementById(elementId);\n      if (isHTMLCanvas(elem)) {\n        backend = Renderer.Backends.CANVAS;\n      } else {\n        backend = Renderer.Backends.SVG;\n      }\n    }\n    this.context = Renderer.buildContext(elementId, backend, width, height, background);\n  }\n  getContext() {\n    return this.context;\n  }\n  setContext(context) {\n    this.context = context;\n    return this;\n  }\n  getStave() {\n    return this.stave;\n  }\n  getVoices() {\n    return this.voices;\n  }\n  Stave(params) {\n    const staveSpace = this.options.stave.space;\n    const p = Object.assign({\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - staveSpace * 1.0,\n      options: {\n        spacing_between_lines_px: staveSpace * 1.0\n      }\n    }, params);\n    const stave = new Stave(p.x, p.y, p.width, p.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n  TabStave(params) {\n    const staveSpace = this.options.stave.space;\n    const p = Object.assign({\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - staveSpace * 1.0,\n      options: {\n        spacing_between_lines_px: staveSpace * 1.3\n      }\n    }, params);\n    const stave = new TabStave(p.x, p.y, p.width, p.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n  StaveNote(noteStruct) {\n    const note = new StaveNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n  GlyphNote(glyph, noteStruct, options) {\n    const note = new GlyphNote(glyph, noteStruct, options);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n  RepeatNote(type, noteStruct, options) {\n    const note = new RepeatNote(type, noteStruct, options);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n  GhostNote(noteStruct) {\n    const ghostNote = new GhostNote(noteStruct);\n    if (this.stave) ghostNote.setStave(this.stave);\n    ghostNote.setContext(this.context);\n    this.renderQ.push(ghostNote);\n    return ghostNote;\n  }\n  TextNote(noteStruct) {\n    const textNote = new TextNote(noteStruct);\n    if (this.stave) textNote.setStave(this.stave);\n    textNote.setContext(this.context);\n    this.renderQ.push(textNote);\n    return textNote;\n  }\n  BarNote(params = {}) {\n    const barNote = new BarNote(params.type);\n    if (this.stave) barNote.setStave(this.stave);\n    barNote.setContext(this.context);\n    this.renderQ.push(barNote);\n    return barNote;\n  }\n  ClefNote(params) {\n    const p = Object.assign({\n      type: 'treble',\n      options: {\n        size: 'default',\n        annotation: undefined\n      }\n    }, params);\n    const clefNote = new ClefNote(p.type, p.options.size, p.options.annotation);\n    if (this.stave) clefNote.setStave(this.stave);\n    clefNote.setContext(this.context);\n    this.renderQ.push(clefNote);\n    return clefNote;\n  }\n  TimeSigNote(params) {\n    const p = Object.assign({\n      time: '4/4'\n    }, params);\n    const timeSigNote = new TimeSigNote(p.time);\n    if (this.stave) timeSigNote.setStave(this.stave);\n    timeSigNote.setContext(this.context);\n    this.renderQ.push(timeSigNote);\n    return timeSigNote;\n  }\n  KeySigNote(params) {\n    const keySigNote = new KeySigNote(params.key, params.cancelKey, params.alterKey);\n    if (this.stave) keySigNote.setStave(this.stave);\n    keySigNote.setContext(this.context);\n    this.renderQ.push(keySigNote);\n    return keySigNote;\n  }\n  TabNote(noteStruct) {\n    const note = new TabNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n  GraceNote(noteStruct) {\n    const note = new GraceNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    return note;\n  }\n  GraceNoteGroup(params) {\n    const group = new GraceNoteGroup(params.notes, params.slur);\n    group.setContext(this.context);\n    return group;\n  }\n  Accidental(params) {\n    const accid = new Accidental(params.type);\n    accid.setContext(this.context);\n    return accid;\n  }\n  Annotation(params) {\n    const p = Object.assign({\n      text: 'p',\n      hJustify: AnnotationHorizontalJustify.CENTER,\n      vJustify: AnnotationVerticalJustify.BOTTOM\n    }, params);\n    const annotation = new Annotation(p.text);\n    annotation.setJustification(p.hJustify);\n    annotation.setVerticalJustification(p.vJustify);\n    annotation.setFont(p.font);\n    annotation.setContext(this.context);\n    return annotation;\n  }\n  ChordSymbol(params) {\n    const p = Object.assign({\n      vJustify: 'top',\n      hJustify: 'center',\n      kerning: true,\n      reportWidth: true\n    }, params);\n    const chordSymbol = new ChordSymbol();\n    chordSymbol.setHorizontal(p.hJustify);\n    chordSymbol.setVertical(p.vJustify);\n    chordSymbol.setEnableKerning(p.kerning);\n    chordSymbol.setReportWidth(p.reportWidth);\n    if (typeof p.fontFamily === 'string' && typeof p.fontSize === 'number') {\n      if (typeof p.fontWeight === 'string') chordSymbol.setFont(p.fontFamily, p.fontSize, p.fontWeight);else chordSymbol.setFont(p.fontFamily, p.fontSize, '');\n    } else if (typeof p.fontSize === 'number') {\n      chordSymbol.setFontSize(p.fontSize);\n    }\n    chordSymbol.setContext(this.context);\n    return chordSymbol;\n  }\n  Articulation(params) {\n    var _a;\n    const articulation = new Articulation((_a = params === null || params === void 0 ? void 0 : params.type) !== null && _a !== void 0 ? _a : 'a.');\n    if ((params === null || params === void 0 ? void 0 : params.position) != undefined) articulation.setPosition(params.position);\n    if ((params === null || params === void 0 ? void 0 : params.betweenLines) != undefined) articulation.setBetweenLines(params.betweenLines);\n    articulation.setContext(this.context);\n    return articulation;\n  }\n  Ornament(type, params) {\n    const options = Object.assign({\n      type,\n      position: 0,\n      accidental: ''\n    }, params);\n    const ornament = new Ornament(type);\n    ornament.setPosition(options.position);\n    if (options.upperAccidental) {\n      ornament.setUpperAccidental(options.upperAccidental);\n    }\n    if (options.lowerAccidental) {\n      ornament.setLowerAccidental(options.lowerAccidental);\n    }\n    if (typeof options.delayed !== 'undefined') {\n      ornament.setDelayed(options.delayed);\n    }\n    ornament.setContext(this.context);\n    return ornament;\n  }\n  TextDynamics(params) {\n    const p = Object.assign({\n      text: 'p',\n      duration: 'q',\n      dots: 0,\n      line: 0\n    }, params);\n    const text = new TextDynamics({\n      text: p.text,\n      line: p.line,\n      duration: p.duration,\n      dots: p.dots\n    });\n    if (this.stave) text.setStave(this.stave);\n    text.setContext(this.context);\n    this.renderQ.push(text);\n    return text;\n  }\n  Fingering(params) {\n    const p = Object.assign({\n      number: '0',\n      position: 'left'\n    }, params);\n    const fingering = new FretHandFinger(p.number);\n    fingering.setPosition(p.position);\n    fingering.setContext(this.context);\n    return fingering;\n  }\n  StringNumber(params, drawCircle = true) {\n    const stringNumber = new StringNumber(params.number);\n    stringNumber.setPosition(params.position);\n    stringNumber.setContext(this.context);\n    stringNumber.setDrawCircle(drawCircle);\n    return stringNumber;\n  }\n  TickContext() {\n    return new TickContext();\n  }\n  ModifierContext() {\n    return new ModifierContext();\n  }\n  MultiMeasureRest(params) {\n    const numMeasures = defined(params.number_of_measures, 'NoNumberOfMeasures');\n    const multiMeasureRest = new MultiMeasureRest(numMeasures, params);\n    multiMeasureRest.setContext(this.context);\n    this.renderQ.push(multiMeasureRest);\n    return multiMeasureRest;\n  }\n  Voice(params) {\n    const p = Object.assign({\n      time: '4/4'\n    }, params);\n    const voice = new Voice(p.time);\n    this.voices.push(voice);\n    return voice;\n  }\n  StaveConnector(params) {\n    const connector = new StaveConnector(params.top_stave, params.bottom_stave);\n    connector.setType(params.type).setContext(this.context);\n    this.renderQ.push(connector);\n    return connector;\n  }\n  Formatter(options) {\n    return new Formatter(options);\n  }\n  Tuplet(params) {\n    const p = Object.assign({\n      notes: [],\n      options: {}\n    }, params);\n    const tuplet = new Tuplet(p.notes, p.options).setContext(this.context);\n    this.renderQ.push(tuplet);\n    return tuplet;\n  }\n  Beam(params) {\n    var _a, _b, _c, _d, _e;\n    const beam = new Beam(params.notes, (_a = params.options) === null || _a === void 0 ? void 0 : _a.autoStem).setContext(this.context);\n    beam.breakSecondaryAt((_c = (_b = params.options) === null || _b === void 0 ? void 0 : _b.secondaryBeamBreaks) !== null && _c !== void 0 ? _c : []);\n    if ((_d = params.options) === null || _d === void 0 ? void 0 : _d.partialBeamDirections) {\n      Object.entries((_e = params.options) === null || _e === void 0 ? void 0 : _e.partialBeamDirections).forEach(([noteIndex, direction]) => {\n        beam.setPartialBeamSideAt(Number(noteIndex), direction);\n      });\n    }\n    this.renderQ.push(beam);\n    return beam;\n  }\n  Curve(params) {\n    const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n    this.renderQ.push(curve);\n    return curve;\n  }\n  StaveTie(params) {\n    var _a;\n    const tie = new StaveTie({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices\n    }, params.text);\n    if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.direction) tie.setDirection(params.options.direction);\n    tie.setContext(this.context);\n    this.renderQ.push(tie);\n    return tie;\n  }\n  StaveLine(params) {\n    var _a, _b;\n    const line = new StaveLine({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices\n    });\n    if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.text) line.setText(params.options.text);\n    if ((_b = params.options) === null || _b === void 0 ? void 0 : _b.font) line.setFont(params.options.font);\n    line.setContext(this.context);\n    this.renderQ.push(line);\n    return line;\n  }\n  VibratoBracket(params) {\n    const vibratoBracket = new VibratoBracket({\n      start: params.from,\n      stop: params.to\n    });\n    if (params.options.line) vibratoBracket.setLine(params.options.line);\n    if (params.options.harsh) vibratoBracket.setHarsh(params.options.harsh);\n    vibratoBracket.setContext(this.context);\n    this.renderQ.push(vibratoBracket);\n    return vibratoBracket;\n  }\n  TextBracket(params) {\n    const textBracket = new TextBracket({\n      start: params.from,\n      stop: params.to,\n      text: params.text,\n      superscript: params.options.superscript,\n      position: params.options.position\n    });\n    if (params.options.line) textBracket.setLine(params.options.line);\n    if (params.options.font) textBracket.setFont(params.options.font);\n    textBracket.setContext(this.context);\n    this.renderQ.push(textBracket);\n    return textBracket;\n  }\n  System(params = {}) {\n    params.factory = this;\n    const system = new System(params).setContext(this.context);\n    this.systems.push(system);\n    return system;\n  }\n  EasyScore(options = {}) {\n    options.factory = this;\n    return new EasyScore(options);\n  }\n  PedalMarking(params) {\n    const p = Object.assign({\n      notes: [],\n      options: {\n        style: 'mixed'\n      }\n    }, params);\n    const pedal = new PedalMarking(p.notes);\n    pedal.setType(PedalMarking.typeString[p.options.style]);\n    pedal.setContext(this.context);\n    this.renderQ.push(pedal);\n    return pedal;\n  }\n  NoteSubGroup(params) {\n    const p = Object.assign({\n      notes: []\n    }, params);\n    const group = new NoteSubGroup(p.notes);\n    group.setContext(this.context);\n    return group;\n  }\n  draw() {\n    const ctx = this.context;\n    this.systems.forEach(s => s.setContext(ctx).format());\n    this.staves.forEach(s => s.setContext(ctx).draw());\n    this.voices.forEach(v => v.setContext(ctx).draw());\n    this.renderQ.forEach(e => {\n      if (!e.isRendered()) e.setContext(ctx).draw();\n    });\n    this.systems.forEach(s => s.setContext(ctx).draw());\n    this.reset();\n  }\n}\nFactory.DEBUG = false;\nFactory.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\nexport { Factory };","map":{"version":3,"names":["Accidental","Annotation","AnnotationHorizontalJustify","AnnotationVerticalJustify","Articulation","BarNote","Beam","ChordSymbol","ClefNote","Curve","EasyScore","Element","Formatter","FretHandFinger","GhostNote","GlyphNote","GraceNote","GraceNoteGroup","KeySigNote","ModifierContext","MultiMeasureRest","NoteSubGroup","Ornament","PedalMarking","Renderer","RepeatNote","Stave","StaveConnector","StaveLine","StaveNote","StaveTie","StringNumber","System","TabNote","TabStave","TextBracket","TextDynamics","TextNote","TickContext","TimeSigNote","Tuplet","defined","log","RuntimeError","VibratoBracket","Voice","isHTMLCanvas","L","args","Factory","DEBUG","newFromElementId","elementId","width","height","renderer","constructor","options","stave","space","background","font","TEXT_FONT","setOptions","reset","renderQ","systems","staves","voices","undefined","Object","assign","initRenderer","backend","elem","document","getElementById","Backends","CANVAS","SVG","context","buildContext","getContext","setContext","getStave","getVoices","params","staveSpace","p","x","y","spacing_between_lines_px","push","noteStruct","note","setStave","glyph","type","ghostNote","textNote","barNote","size","annotation","clefNote","time","timeSigNote","keySigNote","key","cancelKey","alterKey","group","notes","slur","accid","text","hJustify","CENTER","vJustify","BOTTOM","setJustification","setVerticalJustification","setFont","kerning","reportWidth","chordSymbol","setHorizontal","setVertical","setEnableKerning","setReportWidth","fontFamily","fontSize","fontWeight","setFontSize","_a","articulation","position","setPosition","betweenLines","setBetweenLines","accidental","ornament","upperAccidental","setUpperAccidental","lowerAccidental","setLowerAccidental","delayed","setDelayed","duration","dots","line","Fingering","number","fingering","drawCircle","stringNumber","setDrawCircle","numMeasures","number_of_measures","multiMeasureRest","voice","connector","top_stave","bottom_stave","setType","tuplet","_b","_c","_d","_e","beam","autoStem","breakSecondaryAt","secondaryBeamBreaks","partialBeamDirections","entries","forEach","noteIndex","direction","setPartialBeamSideAt","Number","curve","from","to","tie","first_note","last_note","first_indices","last_indices","setDirection","setText","vibratoBracket","start","stop","setLine","harsh","setHarsh","textBracket","superscript","factory","system","style","pedal","typeString","draw","ctx","s","format","v","e","isRendered"],"sources":["/Users/longgongmeishi/projects/yixian/music-notation-app/node_modules/vexflow/build/esm/src/factory.js"],"sourcesContent":["import { Accidental } from './accidental.js';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation.js';\nimport { Articulation } from './articulation.js';\nimport { BarNote } from './barnote.js';\nimport { Beam } from './beam.js';\nimport { ChordSymbol } from './chordsymbol.js';\nimport { ClefNote } from './clefnote.js';\nimport { Curve } from './curve.js';\nimport { EasyScore } from './easyscore.js';\nimport { Element } from './element.js';\nimport { Formatter } from './formatter.js';\nimport { FretHandFinger } from './frethandfinger.js';\nimport { GhostNote } from './ghostnote.js';\nimport { GlyphNote } from './glyphnote.js';\nimport { GraceNote } from './gracenote.js';\nimport { GraceNoteGroup } from './gracenotegroup.js';\nimport { KeySigNote } from './keysignote.js';\nimport { ModifierContext } from './modifiercontext.js';\nimport { MultiMeasureRest } from './multimeasurerest.js';\nimport { NoteSubGroup } from './notesubgroup.js';\nimport { Ornament } from './ornament.js';\nimport { PedalMarking } from './pedalmarking.js';\nimport { Renderer } from './renderer.js';\nimport { RepeatNote } from './repeatnote.js';\nimport { Stave } from './stave.js';\nimport { StaveConnector } from './staveconnector.js';\nimport { StaveLine } from './staveline.js';\nimport { StaveNote } from './stavenote.js';\nimport { StaveTie } from './stavetie.js';\nimport { StringNumber } from './stringnumber.js';\nimport { System } from './system.js';\nimport { TabNote } from './tabnote.js';\nimport { TabStave } from './tabstave.js';\nimport { TextBracket } from './textbracket.js';\nimport { TextDynamics } from './textdynamics.js';\nimport { TextNote } from './textnote.js';\nimport { TickContext } from './tickcontext.js';\nimport { TimeSigNote } from './timesignote.js';\nimport { Tuplet } from './tuplet.js';\nimport { defined, log, RuntimeError } from './util.js';\nimport { VibratoBracket } from './vibratobracket.js';\nimport { Voice } from './voice.js';\nimport { isHTMLCanvas } from './web.js';\nfunction L(...args) {\n    if (Factory.DEBUG)\n        log('Vex.Flow.Factory', args);\n}\nclass Factory {\n    static newFromElementId(elementId, width = 500, height = 200) {\n        return new Factory({ renderer: { elementId, width, height } });\n    }\n    constructor(options = {}) {\n        L('New factory: ', options);\n        this.options = {\n            stave: {\n                space: 10,\n            },\n            renderer: {\n                elementId: '',\n                width: 500,\n                height: 200,\n                background: '#FFF',\n            },\n            font: Factory.TEXT_FONT,\n        };\n        this.setOptions(options);\n    }\n    reset() {\n        this.renderQ = [];\n        this.systems = [];\n        this.staves = [];\n        this.voices = [];\n        this.stave = undefined;\n    }\n    setOptions(options) {\n        this.options = Object.assign(Object.assign({}, this.options), options);\n        this.initRenderer();\n        this.reset();\n    }\n    initRenderer() {\n        const { elementId, width, height, background } = this.options.renderer;\n        if (elementId == null) {\n            return;\n        }\n        if (elementId == '') {\n            L(this);\n            throw new RuntimeError('renderer.elementId not set in FactoryOptions');\n        }\n        let backend = this.options.renderer.backend;\n        if (backend === undefined) {\n            const elem = document.getElementById(elementId);\n            if (isHTMLCanvas(elem)) {\n                backend = Renderer.Backends.CANVAS;\n            }\n            else {\n                backend = Renderer.Backends.SVG;\n            }\n        }\n        this.context = Renderer.buildContext(elementId, backend, width, height, background);\n    }\n    getContext() {\n        return this.context;\n    }\n    setContext(context) {\n        this.context = context;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    getVoices() {\n        return this.voices;\n    }\n    Stave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacing_between_lines_px: staveSpace * 1.0 } }, params);\n        const stave = new Stave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    TabStave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacing_between_lines_px: staveSpace * 1.3 } }, params);\n        const stave = new TabStave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    StaveNote(noteStruct) {\n        const note = new StaveNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GlyphNote(glyph, noteStruct, options) {\n        const note = new GlyphNote(glyph, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    RepeatNote(type, noteStruct, options) {\n        const note = new RepeatNote(type, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GhostNote(noteStruct) {\n        const ghostNote = new GhostNote(noteStruct);\n        if (this.stave)\n            ghostNote.setStave(this.stave);\n        ghostNote.setContext(this.context);\n        this.renderQ.push(ghostNote);\n        return ghostNote;\n    }\n    TextNote(noteStruct) {\n        const textNote = new TextNote(noteStruct);\n        if (this.stave)\n            textNote.setStave(this.stave);\n        textNote.setContext(this.context);\n        this.renderQ.push(textNote);\n        return textNote;\n    }\n    BarNote(params = {}) {\n        const barNote = new BarNote(params.type);\n        if (this.stave)\n            barNote.setStave(this.stave);\n        barNote.setContext(this.context);\n        this.renderQ.push(barNote);\n        return barNote;\n    }\n    ClefNote(params) {\n        const p = Object.assign({ type: 'treble', options: {\n                size: 'default',\n                annotation: undefined,\n            } }, params);\n        const clefNote = new ClefNote(p.type, p.options.size, p.options.annotation);\n        if (this.stave)\n            clefNote.setStave(this.stave);\n        clefNote.setContext(this.context);\n        this.renderQ.push(clefNote);\n        return clefNote;\n    }\n    TimeSigNote(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const timeSigNote = new TimeSigNote(p.time);\n        if (this.stave)\n            timeSigNote.setStave(this.stave);\n        timeSigNote.setContext(this.context);\n        this.renderQ.push(timeSigNote);\n        return timeSigNote;\n    }\n    KeySigNote(params) {\n        const keySigNote = new KeySigNote(params.key, params.cancelKey, params.alterKey);\n        if (this.stave)\n            keySigNote.setStave(this.stave);\n        keySigNote.setContext(this.context);\n        this.renderQ.push(keySigNote);\n        return keySigNote;\n    }\n    TabNote(noteStruct) {\n        const note = new TabNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GraceNote(noteStruct) {\n        const note = new GraceNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        return note;\n    }\n    GraceNoteGroup(params) {\n        const group = new GraceNoteGroup(params.notes, params.slur);\n        group.setContext(this.context);\n        return group;\n    }\n    Accidental(params) {\n        const accid = new Accidental(params.type);\n        accid.setContext(this.context);\n        return accid;\n    }\n    Annotation(params) {\n        const p = Object.assign({ text: 'p', hJustify: AnnotationHorizontalJustify.CENTER, vJustify: AnnotationVerticalJustify.BOTTOM }, params);\n        const annotation = new Annotation(p.text);\n        annotation.setJustification(p.hJustify);\n        annotation.setVerticalJustification(p.vJustify);\n        annotation.setFont(p.font);\n        annotation.setContext(this.context);\n        return annotation;\n    }\n    ChordSymbol(params) {\n        const p = Object.assign({ vJustify: 'top', hJustify: 'center', kerning: true, reportWidth: true }, params);\n        const chordSymbol = new ChordSymbol();\n        chordSymbol.setHorizontal(p.hJustify);\n        chordSymbol.setVertical(p.vJustify);\n        chordSymbol.setEnableKerning(p.kerning);\n        chordSymbol.setReportWidth(p.reportWidth);\n        if (typeof p.fontFamily === 'string' && typeof p.fontSize === 'number') {\n            if (typeof p.fontWeight === 'string')\n                chordSymbol.setFont(p.fontFamily, p.fontSize, p.fontWeight);\n            else\n                chordSymbol.setFont(p.fontFamily, p.fontSize, '');\n        }\n        else if (typeof p.fontSize === 'number') {\n            chordSymbol.setFontSize(p.fontSize);\n        }\n        chordSymbol.setContext(this.context);\n        return chordSymbol;\n    }\n    Articulation(params) {\n        var _a;\n        const articulation = new Articulation((_a = params === null || params === void 0 ? void 0 : params.type) !== null && _a !== void 0 ? _a : 'a.');\n        if ((params === null || params === void 0 ? void 0 : params.position) != undefined)\n            articulation.setPosition(params.position);\n        if ((params === null || params === void 0 ? void 0 : params.betweenLines) != undefined)\n            articulation.setBetweenLines(params.betweenLines);\n        articulation.setContext(this.context);\n        return articulation;\n    }\n    Ornament(type, params) {\n        const options = Object.assign({ type, position: 0, accidental: '' }, params);\n        const ornament = new Ornament(type);\n        ornament.setPosition(options.position);\n        if (options.upperAccidental) {\n            ornament.setUpperAccidental(options.upperAccidental);\n        }\n        if (options.lowerAccidental) {\n            ornament.setLowerAccidental(options.lowerAccidental);\n        }\n        if (typeof options.delayed !== 'undefined') {\n            ornament.setDelayed(options.delayed);\n        }\n        ornament.setContext(this.context);\n        return ornament;\n    }\n    TextDynamics(params) {\n        const p = Object.assign({ text: 'p', duration: 'q', dots: 0, line: 0 }, params);\n        const text = new TextDynamics({\n            text: p.text,\n            line: p.line,\n            duration: p.duration,\n            dots: p.dots,\n        });\n        if (this.stave)\n            text.setStave(this.stave);\n        text.setContext(this.context);\n        this.renderQ.push(text);\n        return text;\n    }\n    Fingering(params) {\n        const p = Object.assign({ number: '0', position: 'left' }, params);\n        const fingering = new FretHandFinger(p.number);\n        fingering.setPosition(p.position);\n        fingering.setContext(this.context);\n        return fingering;\n    }\n    StringNumber(params, drawCircle = true) {\n        const stringNumber = new StringNumber(params.number);\n        stringNumber.setPosition(params.position);\n        stringNumber.setContext(this.context);\n        stringNumber.setDrawCircle(drawCircle);\n        return stringNumber;\n    }\n    TickContext() {\n        return new TickContext();\n    }\n    ModifierContext() {\n        return new ModifierContext();\n    }\n    MultiMeasureRest(params) {\n        const numMeasures = defined(params.number_of_measures, 'NoNumberOfMeasures');\n        const multiMeasureRest = new MultiMeasureRest(numMeasures, params);\n        multiMeasureRest.setContext(this.context);\n        this.renderQ.push(multiMeasureRest);\n        return multiMeasureRest;\n    }\n    Voice(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const voice = new Voice(p.time);\n        this.voices.push(voice);\n        return voice;\n    }\n    StaveConnector(params) {\n        const connector = new StaveConnector(params.top_stave, params.bottom_stave);\n        connector.setType(params.type).setContext(this.context);\n        this.renderQ.push(connector);\n        return connector;\n    }\n    Formatter(options) {\n        return new Formatter(options);\n    }\n    Tuplet(params) {\n        const p = Object.assign({ notes: [], options: {} }, params);\n        const tuplet = new Tuplet(p.notes, p.options).setContext(this.context);\n        this.renderQ.push(tuplet);\n        return tuplet;\n    }\n    Beam(params) {\n        var _a, _b, _c, _d, _e;\n        const beam = new Beam(params.notes, (_a = params.options) === null || _a === void 0 ? void 0 : _a.autoStem).setContext(this.context);\n        beam.breakSecondaryAt((_c = (_b = params.options) === null || _b === void 0 ? void 0 : _b.secondaryBeamBreaks) !== null && _c !== void 0 ? _c : []);\n        if ((_d = params.options) === null || _d === void 0 ? void 0 : _d.partialBeamDirections) {\n            Object.entries((_e = params.options) === null || _e === void 0 ? void 0 : _e.partialBeamDirections).forEach(([noteIndex, direction]) => {\n                beam.setPartialBeamSideAt(Number(noteIndex), direction);\n            });\n        }\n        this.renderQ.push(beam);\n        return beam;\n    }\n    Curve(params) {\n        const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n        this.renderQ.push(curve);\n        return curve;\n    }\n    StaveTie(params) {\n        var _a;\n        const tie = new StaveTie({\n            first_note: params.from,\n            last_note: params.to,\n            first_indices: params.first_indices,\n            last_indices: params.last_indices,\n        }, params.text);\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.direction)\n            tie.setDirection(params.options.direction);\n        tie.setContext(this.context);\n        this.renderQ.push(tie);\n        return tie;\n    }\n    StaveLine(params) {\n        var _a, _b;\n        const line = new StaveLine({\n            first_note: params.from,\n            last_note: params.to,\n            first_indices: params.first_indices,\n            last_indices: params.last_indices,\n        });\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.text)\n            line.setText(params.options.text);\n        if ((_b = params.options) === null || _b === void 0 ? void 0 : _b.font)\n            line.setFont(params.options.font);\n        line.setContext(this.context);\n        this.renderQ.push(line);\n        return line;\n    }\n    VibratoBracket(params) {\n        const vibratoBracket = new VibratoBracket({\n            start: params.from,\n            stop: params.to,\n        });\n        if (params.options.line)\n            vibratoBracket.setLine(params.options.line);\n        if (params.options.harsh)\n            vibratoBracket.setHarsh(params.options.harsh);\n        vibratoBracket.setContext(this.context);\n        this.renderQ.push(vibratoBracket);\n        return vibratoBracket;\n    }\n    TextBracket(params) {\n        const textBracket = new TextBracket({\n            start: params.from,\n            stop: params.to,\n            text: params.text,\n            superscript: params.options.superscript,\n            position: params.options.position,\n        });\n        if (params.options.line)\n            textBracket.setLine(params.options.line);\n        if (params.options.font)\n            textBracket.setFont(params.options.font);\n        textBracket.setContext(this.context);\n        this.renderQ.push(textBracket);\n        return textBracket;\n    }\n    System(params = {}) {\n        params.factory = this;\n        const system = new System(params).setContext(this.context);\n        this.systems.push(system);\n        return system;\n    }\n    EasyScore(options = {}) {\n        options.factory = this;\n        return new EasyScore(options);\n    }\n    PedalMarking(params) {\n        const p = Object.assign({ notes: [], options: {\n                style: 'mixed',\n            } }, params);\n        const pedal = new PedalMarking(p.notes);\n        pedal.setType(PedalMarking.typeString[p.options.style]);\n        pedal.setContext(this.context);\n        this.renderQ.push(pedal);\n        return pedal;\n    }\n    NoteSubGroup(params) {\n        const p = Object.assign({ notes: [] }, params);\n        const group = new NoteSubGroup(p.notes);\n        group.setContext(this.context);\n        return group;\n    }\n    draw() {\n        const ctx = this.context;\n        this.systems.forEach((s) => s.setContext(ctx).format());\n        this.staves.forEach((s) => s.setContext(ctx).draw());\n        this.voices.forEach((v) => v.setContext(ctx).draw());\n        this.renderQ.forEach((e) => {\n            if (!e.isRendered())\n                e.setContext(ctx).draw();\n        });\n        this.systems.forEach((s) => s.setContext(ctx).draw());\n        this.reset();\n    }\n}\nFactory.DEBUG = false;\nFactory.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\nexport { Factory };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}