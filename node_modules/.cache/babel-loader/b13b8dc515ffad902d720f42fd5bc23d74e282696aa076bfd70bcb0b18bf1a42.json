{"ast":null,"code":"import { BoundingBox } from './boundingbox.js';\nimport { Glyph } from './glyph.js';\nimport { Note } from './note.js';\nimport { Stem } from './stem.js';\nimport { Tables } from './tables.js';\nimport { defined, log } from './util.js';\nfunction L(...args) {\n  if (NoteHead.DEBUG) log('Vex.Flow.NoteHead', args);\n}\nfunction drawSlashNoteHead(ctx, duration, x, y, stem_direction, staveSpace) {\n  const width = Tables.SLASH_NOTEHEAD_WIDTH;\n  ctx.save();\n  ctx.setLineWidth(Tables.STEM_WIDTH);\n  let fill = false;\n  if (Tables.durationToNumber(duration) > 2) {\n    fill = true;\n  }\n  if (!fill) x -= Tables.STEM_WIDTH / 2 * stem_direction;\n  ctx.beginPath();\n  ctx.moveTo(x, y + staveSpace);\n  ctx.lineTo(x, y + 1);\n  ctx.lineTo(x + width, y - staveSpace);\n  ctx.lineTo(x + width, y);\n  ctx.lineTo(x, y + staveSpace);\n  ctx.closePath();\n  if (fill) {\n    ctx.fill();\n  } else {\n    ctx.stroke();\n  }\n  if (Tables.durationToFraction(duration).equals(0.5)) {\n    const breve_lines = [-3, -1, width + 1, width + 3];\n    for (let i = 0; i < breve_lines.length; i++) {\n      ctx.beginPath();\n      ctx.moveTo(x + breve_lines[i], y - 10);\n      ctx.lineTo(x + breve_lines[i], y + 11);\n      ctx.stroke();\n    }\n  }\n  ctx.restore();\n}\nclass NoteHead extends Note {\n  static get CATEGORY() {\n    return \"NoteHead\";\n  }\n  constructor(noteStruct) {\n    super(noteStruct);\n    this.custom_glyph = false;\n    this.stem_up_x_offset = 0;\n    this.stem_down_x_offset = 0;\n    this.index = noteStruct.index;\n    this.x = noteStruct.x || 0;\n    this.y = noteStruct.y || 0;\n    if (noteStruct.note_type) this.noteType = noteStruct.note_type;\n    this.displaced = noteStruct.displaced || false;\n    this.stem_direction = noteStruct.stem_direction || Stem.UP;\n    this.line = noteStruct.line || 0;\n    this.glyphProps = Tables.getGlyphProps(this.duration, this.noteType);\n    defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n    if ((this.line > 5 || this.line < 0) && this.glyphProps.ledger_code_head) {\n      this.glyphProps.code_head = this.glyphProps.ledger_code_head;\n    }\n    this.glyph_code = this.glyphProps.code_head;\n    this.x_shift = noteStruct.x_shift || 0;\n    if (noteStruct.custom_glyph_code) {\n      this.custom_glyph = true;\n      this.glyph_code = noteStruct.custom_glyph_code;\n      this.stem_up_x_offset = noteStruct.stem_up_x_offset || 0;\n      this.stem_down_x_offset = noteStruct.stem_down_x_offset || 0;\n    }\n    this.setStyle(noteStruct.style);\n    this.slashed = noteStruct.slashed || false;\n    this.render_options = Object.assign(Object.assign({}, this.render_options), {\n      glyph_font_scale: noteStruct.glyph_font_scale || Tables.NOTATION_FONT_SCALE\n    });\n    this.setWidth(this.custom_glyph && !this.glyph_code.startsWith('noteheadSlashed') && !this.glyph_code.startsWith('noteheadCircled') ? Glyph.getWidth(this.glyph_code, this.render_options.glyph_font_scale) : this.glyphProps.getWidth(this.render_options.glyph_font_scale));\n  }\n  getWidth() {\n    return this.width;\n  }\n  isDisplaced() {\n    return this.displaced === true;\n  }\n  setX(x) {\n    this.x = x;\n    return this;\n  }\n  getY() {\n    return this.y;\n  }\n  setY(y) {\n    this.y = y;\n    return this;\n  }\n  getLine() {\n    return this.line;\n  }\n  setLine(line) {\n    this.line = line;\n    return this;\n  }\n  getAbsoluteX() {\n    const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n    const displacementStemAdjustment = Stem.WIDTH / 2;\n    const musicFont = Tables.currentMusicFont();\n    const fontShift = musicFont.lookupMetric('notehead.shiftX', 0) * this.stem_direction;\n    const displacedFontShift = musicFont.lookupMetric('noteHead.displacedShiftX', 0) * this.stem_direction;\n    return x + fontShift + (this.displaced ? (this.width - displacementStemAdjustment) * this.stem_direction + displacedFontShift : 0);\n  }\n  getBoundingBox() {\n    const spacing = this.checkStave().getSpacingBetweenLines();\n    const half_spacing = spacing / 2;\n    const min_y = this.y - half_spacing;\n    return new BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n  }\n  setStave(stave) {\n    const line = this.getLine();\n    this.stave = stave;\n    if (this.stave) {\n      this.setY(this.stave.getYForNote(line));\n      this.setContext(this.stave.getContext());\n    }\n    return this;\n  }\n  preFormat() {\n    if (this.preFormatted) return this;\n    const width = this.getWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx;\n    this.setWidth(width);\n    this.preFormatted = true;\n    return this;\n  }\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n    let head_x = this.getAbsoluteX();\n    if (this.custom_glyph) {\n      head_x += this.stem_direction === Stem.UP ? this.stem_up_x_offset + (this.glyphProps.stem ? this.glyphProps.getWidth(this.render_options.glyph_font_scale) - this.width : 0) : this.stem_down_x_offset;\n    }\n    const y = this.y;\n    L(\"Drawing note head '\", this.noteType, this.duration, \"' at\", head_x, y);\n    const stem_direction = this.stem_direction;\n    const glyph_font_scale = this.render_options.glyph_font_scale;\n    const categorySuffix = `${this.glyph_code}Stem${stem_direction === Stem.UP ? 'Up' : 'Down'}`;\n    if (this.noteType === 's') {\n      const staveSpace = this.checkStave().getSpacingBetweenLines();\n      drawSlashNoteHead(ctx, this.duration, head_x, y, stem_direction, staveSpace);\n    } else {\n      Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code, {\n        category: `noteHead.${categorySuffix}`\n      });\n    }\n  }\n}\nNoteHead.DEBUG = false;\nexport { NoteHead };","map":{"version":3,"names":["BoundingBox","Glyph","Note","Stem","Tables","defined","log","L","args","NoteHead","DEBUG","drawSlashNoteHead","ctx","duration","x","y","stem_direction","staveSpace","width","SLASH_NOTEHEAD_WIDTH","save","setLineWidth","STEM_WIDTH","fill","durationToNumber","beginPath","moveTo","lineTo","closePath","stroke","durationToFraction","equals","breve_lines","i","length","restore","CATEGORY","constructor","noteStruct","custom_glyph","stem_up_x_offset","stem_down_x_offset","index","note_type","noteType","displaced","UP","line","glyphProps","getGlyphProps","ledger_code_head","code_head","glyph_code","x_shift","custom_glyph_code","setStyle","style","slashed","render_options","Object","assign","glyph_font_scale","NOTATION_FONT_SCALE","setWidth","startsWith","getWidth","isDisplaced","setX","getY","setY","getLine","setLine","getAbsoluteX","preFormatted","displacementStemAdjustment","WIDTH","musicFont","currentMusicFont","fontShift","lookupMetric","displacedFontShift","getBoundingBox","spacing","checkStave","getSpacingBetweenLines","half_spacing","min_y","setStave","stave","getYForNote","setContext","getContext","preFormat","leftDisplacedHeadPx","rightDisplacedHeadPx","draw","checkContext","setRendered","head_x","stem","categorySuffix","renderGlyph","category"],"sources":["/Users/longgongmeishi/projects/yixian/music-notation-app/node_modules/vexflow/build/esm/src/notehead.js"],"sourcesContent":["import { BoundingBox } from './boundingbox.js';\nimport { Glyph } from './glyph.js';\nimport { Note } from './note.js';\nimport { Stem } from './stem.js';\nimport { Tables } from './tables.js';\nimport { defined, log } from './util.js';\nfunction L(...args) {\n    if (NoteHead.DEBUG)\n        log('Vex.Flow.NoteHead', args);\n}\nfunction drawSlashNoteHead(ctx, duration, x, y, stem_direction, staveSpace) {\n    const width = Tables.SLASH_NOTEHEAD_WIDTH;\n    ctx.save();\n    ctx.setLineWidth(Tables.STEM_WIDTH);\n    let fill = false;\n    if (Tables.durationToNumber(duration) > 2) {\n        fill = true;\n    }\n    if (!fill)\n        x -= (Tables.STEM_WIDTH / 2) * stem_direction;\n    ctx.beginPath();\n    ctx.moveTo(x, y + staveSpace);\n    ctx.lineTo(x, y + 1);\n    ctx.lineTo(x + width, y - staveSpace);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x, y + staveSpace);\n    ctx.closePath();\n    if (fill) {\n        ctx.fill();\n    }\n    else {\n        ctx.stroke();\n    }\n    if (Tables.durationToFraction(duration).equals(0.5)) {\n        const breve_lines = [-3, -1, width + 1, width + 3];\n        for (let i = 0; i < breve_lines.length; i++) {\n            ctx.beginPath();\n            ctx.moveTo(x + breve_lines[i], y - 10);\n            ctx.lineTo(x + breve_lines[i], y + 11);\n            ctx.stroke();\n        }\n    }\n    ctx.restore();\n}\nclass NoteHead extends Note {\n    static get CATEGORY() {\n        return \"NoteHead\";\n    }\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.custom_glyph = false;\n        this.stem_up_x_offset = 0;\n        this.stem_down_x_offset = 0;\n        this.index = noteStruct.index;\n        this.x = noteStruct.x || 0;\n        this.y = noteStruct.y || 0;\n        if (noteStruct.note_type)\n            this.noteType = noteStruct.note_type;\n        this.displaced = noteStruct.displaced || false;\n        this.stem_direction = noteStruct.stem_direction || Stem.UP;\n        this.line = noteStruct.line || 0;\n        this.glyphProps = Tables.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        if ((this.line > 5 || this.line < 0) && this.glyphProps.ledger_code_head) {\n            this.glyphProps.code_head = this.glyphProps.ledger_code_head;\n        }\n        this.glyph_code = this.glyphProps.code_head;\n        this.x_shift = noteStruct.x_shift || 0;\n        if (noteStruct.custom_glyph_code) {\n            this.custom_glyph = true;\n            this.glyph_code = noteStruct.custom_glyph_code;\n            this.stem_up_x_offset = noteStruct.stem_up_x_offset || 0;\n            this.stem_down_x_offset = noteStruct.stem_down_x_offset || 0;\n        }\n        this.setStyle(noteStruct.style);\n        this.slashed = noteStruct.slashed || false;\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { glyph_font_scale: noteStruct.glyph_font_scale || Tables.NOTATION_FONT_SCALE });\n        this.setWidth(this.custom_glyph &&\n            !this.glyph_code.startsWith('noteheadSlashed') &&\n            !this.glyph_code.startsWith('noteheadCircled')\n            ? Glyph.getWidth(this.glyph_code, this.render_options.glyph_font_scale)\n            : this.glyphProps.getWidth(this.render_options.glyph_font_scale));\n    }\n    getWidth() {\n        return this.width;\n    }\n    isDisplaced() {\n        return this.displaced === true;\n    }\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    getY() {\n        return this.y;\n    }\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    getLine() {\n        return this.line;\n    }\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    getAbsoluteX() {\n        const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n        const displacementStemAdjustment = Stem.WIDTH / 2;\n        const musicFont = Tables.currentMusicFont();\n        const fontShift = musicFont.lookupMetric('notehead.shiftX', 0) * this.stem_direction;\n        const displacedFontShift = musicFont.lookupMetric('noteHead.displacedShiftX', 0) * this.stem_direction;\n        return (x +\n            fontShift +\n            (this.displaced ? (this.width - displacementStemAdjustment) * this.stem_direction + displacedFontShift : 0));\n    }\n    getBoundingBox() {\n        const spacing = this.checkStave().getSpacingBetweenLines();\n        const half_spacing = spacing / 2;\n        const min_y = this.y - half_spacing;\n        return new BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n    }\n    setStave(stave) {\n        const line = this.getLine();\n        this.stave = stave;\n        if (this.stave) {\n            this.setY(this.stave.getYForNote(line));\n            this.setContext(this.stave.getContext());\n        }\n        return this;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        const width = this.getWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx;\n        this.setWidth(width);\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let head_x = this.getAbsoluteX();\n        if (this.custom_glyph) {\n            head_x +=\n                this.stem_direction === Stem.UP\n                    ? this.stem_up_x_offset +\n                        (this.glyphProps.stem ? this.glyphProps.getWidth(this.render_options.glyph_font_scale) - this.width : 0)\n                    : this.stem_down_x_offset;\n        }\n        const y = this.y;\n        L(\"Drawing note head '\", this.noteType, this.duration, \"' at\", head_x, y);\n        const stem_direction = this.stem_direction;\n        const glyph_font_scale = this.render_options.glyph_font_scale;\n        const categorySuffix = `${this.glyph_code}Stem${stem_direction === Stem.UP ? 'Up' : 'Down'}`;\n        if (this.noteType === 's') {\n            const staveSpace = this.checkStave().getSpacingBetweenLines();\n            drawSlashNoteHead(ctx, this.duration, head_x, y, stem_direction, staveSpace);\n        }\n        else {\n            Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code, {\n                category: `noteHead.${categorySuffix}`,\n            });\n        }\n    }\n}\nNoteHead.DEBUG = false;\nexport { NoteHead };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}