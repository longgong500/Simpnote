{"ast":null,"code":"import { Font, FontStyle, FontWeight } from './font.js';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier.js';\nimport { TextJustification, TextNote } from './textnote.js';\nimport { RuntimeError } from './util.js';\nclass StaveText extends StaveModifier {\n  static get CATEGORY() {\n    return \"StaveText\";\n  }\n  constructor(text, position, options = {}) {\n    super();\n    this.setWidth(16);\n    this.text = text;\n    this.position = position;\n    this.options = Object.assign({\n      shift_x: 0,\n      shift_y: 0,\n      justification: TextNote.Justification.CENTER\n    }, options);\n    this.resetFont();\n  }\n  setStaveText(text) {\n    this.text = text;\n    return this;\n  }\n  setShiftX(x) {\n    this.shift_x = x;\n    return this;\n  }\n  setShiftY(y) {\n    this.shift_y = y;\n    return this;\n  }\n  setText(text) {\n    this.text = text;\n    return this;\n  }\n  draw(stave) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n    ctx.save();\n    ctx.setLineWidth(2);\n    ctx.setFont(this.textFont);\n    const text_width = ctx.measureText('' + this.text).width;\n    let x;\n    let y;\n    switch (this.position) {\n      case StaveModifierPosition.LEFT:\n      case StaveModifierPosition.RIGHT:\n        y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n        if (this.position === StaveModifierPosition.LEFT) {\n          x = stave.getX() - text_width - 24 + this.options.shift_x;\n        } else {\n          x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n        }\n        break;\n      case StaveModifierPosition.ABOVE:\n      case StaveModifierPosition.BELOW:\n        x = stave.getX() + this.options.shift_x;\n        if (this.options.justification === TextJustification.CENTER) {\n          x += stave.getWidth() / 2 - text_width / 2;\n        } else if (this.options.justification === TextJustification.RIGHT) {\n          x += stave.getWidth() - text_width;\n        }\n        if (this.position === StaveModifierPosition.ABOVE) {\n          y = stave.getYForTopText(2) + this.options.shift_y;\n        } else {\n          y = stave.getYForBottomText(2) + this.options.shift_y;\n        }\n        break;\n      default:\n        throw new RuntimeError('InvalidPosition', 'Value Must be in Modifier.Position.');\n    }\n    ctx.fillText('' + this.text, x, y + 4);\n    ctx.restore();\n    return this;\n  }\n}\nStaveText.TEXT_FONT = {\n  family: Font.SERIF,\n  size: 16,\n  weight: FontWeight.NORMAL,\n  style: FontStyle.NORMAL\n};\nexport { StaveText };","map":{"version":3,"names":["Font","FontStyle","FontWeight","StaveModifier","StaveModifierPosition","TextJustification","TextNote","RuntimeError","StaveText","CATEGORY","constructor","text","position","options","setWidth","Object","assign","shift_x","shift_y","justification","Justification","CENTER","resetFont","setStaveText","setShiftX","x","setShiftY","y","setText","draw","stave","ctx","checkContext","setRendered","save","setLineWidth","setFont","textFont","text_width","measureText","width","LEFT","RIGHT","getYForLine","getBottomLineY","getX","getWidth","ABOVE","BELOW","getYForTopText","getYForBottomText","fillText","restore","TEXT_FONT","family","SERIF","size","weight","NORMAL","style"],"sources":["/Users/longgongmeishi/projects/yixian/music-notation-app/node_modules/vexflow/build/esm/src/stavetext.js"],"sourcesContent":["import { Font, FontStyle, FontWeight } from './font.js';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier.js';\nimport { TextJustification, TextNote } from './textnote.js';\nimport { RuntimeError } from './util.js';\nclass StaveText extends StaveModifier {\n    static get CATEGORY() {\n        return \"StaveText\";\n    }\n    constructor(text, position, options = {}) {\n        super();\n        this.setWidth(16);\n        this.text = text;\n        this.position = position;\n        this.options = Object.assign({ shift_x: 0, shift_y: 0, justification: TextNote.Justification.CENTER }, options);\n        this.resetFont();\n    }\n    setStaveText(text) {\n        this.text = text;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    setText(text) {\n        this.text = text;\n        return this;\n    }\n    draw(stave) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setLineWidth(2);\n        ctx.setFont(this.textFont);\n        const text_width = ctx.measureText('' + this.text).width;\n        let x;\n        let y;\n        switch (this.position) {\n            case StaveModifierPosition.LEFT:\n            case StaveModifierPosition.RIGHT:\n                y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n                if (this.position === StaveModifierPosition.LEFT) {\n                    x = stave.getX() - text_width - 24 + this.options.shift_x;\n                }\n                else {\n                    x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n                }\n                break;\n            case StaveModifierPosition.ABOVE:\n            case StaveModifierPosition.BELOW:\n                x = stave.getX() + this.options.shift_x;\n                if (this.options.justification === TextJustification.CENTER) {\n                    x += stave.getWidth() / 2 - text_width / 2;\n                }\n                else if (this.options.justification === TextJustification.RIGHT) {\n                    x += stave.getWidth() - text_width;\n                }\n                if (this.position === StaveModifierPosition.ABOVE) {\n                    y = stave.getYForTopText(2) + this.options.shift_y;\n                }\n                else {\n                    y = stave.getYForBottomText(2) + this.options.shift_y;\n                }\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', 'Value Must be in Modifier.Position.');\n        }\n        ctx.fillText('' + this.text, x, y + 4);\n        ctx.restore();\n        return this;\n    }\n}\nStaveText.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 16,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\nexport { StaveText };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}